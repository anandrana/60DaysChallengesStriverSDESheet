/*

	Following is the structure used to represent the Binary Tree Node

	class BinaryTreeNode<T> {
		T val;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;

		public BinaryTreeNode(T val) {
			this.val = val;
			this.left = null;
			this.right = null;
		}
	}

*/

import java.util.*;

public class Solution {
	
  public static ArrayList<Integer> getLevelOrder(BinaryTreeNode root) {
    //Your code goes here
	  ArrayList<Integer> ans=new ArrayList<>();
	  if(root==null){
		  return ans;
	  }
	  
	  
	  List<BinaryTreeNode> temp=new ArrayList<>();
	  temp.add(root);
	  while(temp.size()>0){
		  
		  int len=temp.size();
		  while(len!=0){
			 BinaryTreeNode node=temp.remove(0);
			  ans.add(node.val);
			if(node.left!=null){
				  temp.add(node.left);
			  }
			  if(node.right!=null){
				  temp.add(node.right);
			  }
			  len--;
		  }

	  }
	  return ans;
	  
  }

}
