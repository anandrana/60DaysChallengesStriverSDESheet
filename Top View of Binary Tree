/************************************************************

    Following is the TreeNode class structure:

    class BinaryTreeNode {
		int val;
		BinaryTreeNode left;
		BinaryTreeNode right;

		BinaryTreeNode(int val) {
			this.val = val;
			this.left = null;
			this.right = null;
		}
	}

************************************************************/
import java.util.*;
class Pair{
	public BinaryTreeNode root_;
	public int dis;
	public Pair(BinaryTreeNode root_,int dis){
		this.root_=root_;
		this.dis=dis;
	}
}
public class Solution {
	public static ArrayList<Integer> getTopView(BinaryTreeNode root) {
		// Write your code here.
		ArrayList<Integer> ans=new ArrayList<>();
		if(root==null){
			return ans;
		}
		Queue<Pair> q=new LinkedList<>();
		q.add(new Pair(root,0));
		Map<Integer,Integer> tm=new TreeMap<>();
		while(q.size()>0){
			
			Pair p=q.remove();
			BinaryTreeNode node=p.root_;
			int d=p.dis;
			
			if(!tm.containsKey(d)){
				tm.put(d,node.val);
			}
			if(node.left!=null){
				q.add(new Pair(node.left,d-1));
			}
			if(node.right!=null){
				q.add(new Pair(node.right,d+1));
			}
		}
		
		for(Map.Entry<Integer,Integer> m:tm.entrySet()){
			ans.add(m.getValue());
		}
		return ans;
	}
}
