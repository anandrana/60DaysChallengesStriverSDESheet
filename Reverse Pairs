import java.util.* ;
import java.io.*; 
import java.util.ArrayList;

public class Solution 
{
    public static int merge(ArrayList<Integer> arr,int left,int mid,int right){
         
        int j=mid+1;
        int count=0;
        for(int i=left;i<=mid;i++){
            while(j<=right && (arr.get(i)>2*(arr.get(j)))){
                j++;
            }
            count+=j-(mid+1);
        }
        
        ArrayList<Integer> temp=new ArrayList<>();
        int i=left;j=mid+1;
        while(i<=mid && j<=right){
            if(arr.get(i)<arr.get(j)){
                temp.add(arr.get(i));
                i++;
            }else{
                temp.add(arr.get(j));
                j++;
            }
        }
        
        while(i<=mid){
            temp.add(arr.get(i));
            i++;
        }
        
        while(j<=right){
            temp.add(arr.get(j));
            j++;
        }
        for(i=left;i<=right;i++){
            arr.set(i,temp.get(i-left));
        }
        return count;
    }
    public static int mergeSort(ArrayList<Integer> arr,int l,int r){
        int inv=0;
        if(l<r){
            int mid=(l+r)/2;
            inv+=mergeSort(arr,l,mid);
            inv+=mergeSort(arr,mid+1,r);
            inv+=merge(arr,l,mid,r);
        }
        return inv;
    }
    public static int reversePairs(ArrayList<Integer> arr) 
    {
        // Write your code here.
        return mergeSort(arr,0,arr.size()-1);
    }
}
